---

- name: "creating cluster '{{ apollo_cluster }}'"
  hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - name: "creating cluster directory"
      file:
        path: "{{ apollo_space_dir }}/{{ apollo_cluster }}"
        state: directory
        mode: '0755'
      tags:
        - create

    - name: "setting cluster blueprint"
      set_fact:
        cluster_blueprint: "{{ config[apollo_cluster]['vars']['blueprint'] }}"
      tags:
        - create

    - name: showing blueprint
      debug:
        var: cluster_blueprint
        verbosity: 1

    - name: creating resources
      include_role:
        name: "{{ cluster_blueprint[item]['spec']['provider']['name'] }}/server/create"
        apply:
          tags:
            - create
      vars:
        blueprint: "{{cluster_blueprint[item] }}"
        group: "{{ item }}"
      tags:
        - create
      when:
        - cluster_blueprint[item]['count'] > 0
      with_items:
        - master
        - node

    - name: creating inventory
      include_role:
        name: "inventory"
        apply:
          tags:
            - create
      tags:
        - create
        - save

    - name: saving cluster inventory
      template:
        src: "inventory.yml.j2"
        dest: "{{ apollo_space_dir }}/{{ apollo_cluster }}/inventory.yml"
      tags:
        - never
        - create

    - name: refresh inventory
      meta: refresh_inventory
      tags:
        - create

- name: "installing cluster '{{ apollo_cluster }}'"
  hosts: "{{ apollo_cluster }}:!kubernetes"
  gather_facts: no
  tasks:
    - name: asserting nodes are up
      wait_for_connection:
      tags:
        - create
        - install

    - name: setting node facts
      setup:
        filter: "*"
      tags:
        - always

    - name: installing k3s
      include_role:
        #name: "{{Â hostvars[inventory_hostname]['orchestrator'] }}"
        name: k3s
        allow_duplicates: no
        apply:
          tags:
            - orchestrator
            - k3s
            - create
      when:
        - provider != 'docker'
        - "'kubernetes' not in group_names"
      tags:
        - create
        - install
